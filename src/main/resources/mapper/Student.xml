<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssm.mapper.StudentDao">

    <!--自定义返回结果映射
    id：唯一标识该结果的名称
    type：指向的实体类路径
    -->
    <resultMap id="studentMap"
               type="com.ssm.domain.Student">
        <!--主键id映射
        property：对应实体类中的成员变量名称
        column：对应数据库表中的列名
        javaType：指明实体类中的成员变量类型
        jdbcType：指明数据库表中的列类型
        主键id用id标签，其他属性用result标签
        -->
        <id property="id" column="sid"
            javaType="java.lang.Integer"
            jdbcType="INTEGER"/>

        <result property="name" column="sname"/>
        <result property="password" column="spassword"/>
    </resultMap>

    <!--查询所有-->
    <select id="selectAll"
            resultMap="studentMap">
        SELECT * FROM student
    </select>

    <!--根据主键id进行查询，返回单个对象，对象类型映射
    Student实体类；
    resultMap：指向只定义结果类型，当返回的列名与实体类
    中的类名不一致时，需要自定义映射结果；
    parameterType：定义参数类型，如果参数类型是基本类型，
    则在sql语句中取值均用value名替换，例如：#{value},
    ${value}
    -->
    <select id="selectById"
            resultMap="studentMap"
            parameterType="java.lang.Integer">
        SELECT * FROM student WHERE sid=#{value}
    </select>

    <!--插入某个学生对象，其中主键id采用自动增长的方式
    故插入时不需要手动设置主键id-->
    <insert id="insertStudent"
            parameterType="com.ssm.domain.Student"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO student(sname,spassword)
        VALUES(#{name},#{password})
    </insert>

    <!--删除某个对象，根据主键id删除-->
    <delete id="deleteById"
            parameterType="java.lang.Integer">
        DELETE FROM student WHERE sid=#{value}
    </delete>

    <!--更新某个对象，根据主键id更新-->
    <update id="updateById"
            parameterType="com.ssm.domain.Student">
        UPDATE student SET
          sname=#{name},
          spassword=#{password}
        WHERE sid=#{id}
    </update>


</mapper>